{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1_tOz-nqgi9eARo5D7WOixVKaAMdRf_mx","timestamp":1740926746311}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install boto3 awscli"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HlqpgqlIdB1A","executionInfo":{"status":"ok","timestamp":1740752631277,"user_tz":-60,"elapsed":23108,"user":{"displayName":"marco renzi","userId":"06858754244705857036"}},"outputId":"b4cb364a-eec0-475a-b859-b857411b43f3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting boto3\n","  Downloading boto3-1.37.3-py3-none-any.whl.metadata (6.6 kB)\n","Collecting awscli\n","  Downloading awscli-1.38.3-py3-none-any.whl.metadata (11 kB)\n","Collecting botocore<1.38.0,>=1.37.3 (from boto3)\n","  Downloading botocore-1.37.3-py3-none-any.whl.metadata (5.7 kB)\n","Collecting jmespath<2.0.0,>=0.7.1 (from boto3)\n","  Downloading jmespath-1.0.1-py3-none-any.whl.metadata (7.6 kB)\n","Collecting s3transfer<0.12.0,>=0.11.0 (from boto3)\n","  Downloading s3transfer-0.11.3-py3-none-any.whl.metadata (1.7 kB)\n","Collecting docutils<0.17,>=0.10 (from awscli)\n","  Downloading docutils-0.16-py2.py3-none-any.whl.metadata (2.7 kB)\n","Requirement already satisfied: PyYAML<6.1,>=3.10 in /usr/local/lib/python3.11/dist-packages (from awscli) (6.0.2)\n","Collecting colorama<0.4.7,>=0.2.5 (from awscli)\n","  Downloading colorama-0.4.6-py2.py3-none-any.whl.metadata (17 kB)\n","Collecting rsa<4.8,>=3.1.2 (from awscli)\n","  Downloading rsa-4.7.2-py3-none-any.whl.metadata (3.6 kB)\n","Requirement already satisfied: python-dateutil<3.0.0,>=2.1 in /usr/local/lib/python3.11/dist-packages (from botocore<1.38.0,>=1.37.3->boto3) (2.8.2)\n","Requirement already satisfied: urllib3!=2.2.0,<3,>=1.25.4 in /usr/local/lib/python3.11/dist-packages (from botocore<1.38.0,>=1.37.3->boto3) (2.3.0)\n","Requirement already satisfied: pyasn1>=0.1.3 in /usr/local/lib/python3.11/dist-packages (from rsa<4.8,>=3.1.2->awscli) (0.6.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore<1.38.0,>=1.37.3->boto3) (1.17.0)\n","Downloading boto3-1.37.3-py3-none-any.whl (139 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m139.3/139.3 kB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading awscli-1.38.3-py3-none-any.whl (4.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4.6/4.6 MB\u001b[0m \u001b[31m25.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading botocore-1.37.3-py3-none-any.whl (13.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.3/13.3 MB\u001b[0m \u001b[31m71.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading colorama-0.4.6-py2.py3-none-any.whl (25 kB)\n","Downloading docutils-0.16-py2.py3-none-any.whl (548 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m548.2/548.2 kB\u001b[0m \u001b[31m26.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading jmespath-1.0.1-py3-none-any.whl (20 kB)\n","Downloading rsa-4.7.2-py3-none-any.whl (34 kB)\n","Downloading s3transfer-0.11.3-py3-none-any.whl (84 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m84.2/84.2 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: rsa, jmespath, docutils, colorama, botocore, s3transfer, boto3, awscli\n","  Attempting uninstall: rsa\n","    Found existing installation: rsa 4.9\n","    Uninstalling rsa-4.9:\n","      Successfully uninstalled rsa-4.9\n","  Attempting uninstall: docutils\n","    Found existing installation: docutils 0.21.2\n","    Uninstalling docutils-0.21.2:\n","      Successfully uninstalled docutils-0.21.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","sphinx 8.1.3 requires docutils<0.22,>=0.20, but you have docutils 0.16 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed awscli-1.38.3 boto3-1.37.3 botocore-1.37.3 colorama-0.4.6 docutils-0.16 jmespath-1.0.1 rsa-4.7.2 s3transfer-0.11.3\n"]}]},{"cell_type":"code","source":["!aws configure"],"metadata":{"id":"iIwCqXsldJXH"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","import os\n","import boto3\n","from botocore.exceptions import ClientError, NoCredentialsError\n","from botocore.config import Config"],"metadata":{"id":"zt5I6VLcdGNN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["S3_BUCKET = \"s3-directed\"\n","\n","cities = {\n","    \"Vienna\": {\n","        \"sea_mask\": \"s3://s3-directed/api_data/c5298b37096499d3c8bcfc49e449b393/seamask.tif\",\n","        \"dem_building\": \"s3://s3-directed/api_data/c5298b37096499d3c8bcfc49e449b393/dem_building.tif\",\n","        \"bbox\": [16.1702, 48.0464, 16.6684, 48.3688]\n","    },\n","    \"Esbjerg\": {\n","        \"sea_mask\": \"s3://s3-directed/api_data/b0d2dfae6d7dfe22594c58a28b00e183/seamask.tif\",\n","        \"dem_building\": \"s3://s3-directed/api_data/b0d2dfae6d7dfe22594c58a28b00e183/dem_building.tif\",\n","        \"bbox\": [8.2858, 55.4121, 8.5328, 55.586]\n","    }\n","}\n"],"metadata":{"id":"GZyP77CDd9q7"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4q3dh5ZoJUQM"},"outputs":[],"source":["# Flood map generation function with safer_rain model\n","def generate_safer_rain_flood_map(dem_file, output_file, s3_bucket, rain=0):\n","\n","    # Define process request parameters\n","    url = \"http://pygeoapi-saferplaces-lb-409838694.us-east-1.elb.amazonaws.com/processes/safer-rain-process/execution\"\n","\n","\n","    s3_output_file = f\"s3://{s3_bucket}/api_data/{output_file}\"\n","\n","    if rain:\n","        body = {\n","            \"inputs\": {\n","                \"dem\": dem_file,\n","                \"rain\": rain,\n","                \"water\": s3_output_file,\n","                \"overwrite\": True,\n","                \"debug\": True,\n","                \"mode\": \"batch\",\n","                \"retries\": 1,\n","                \"timeout\": 1200,\n","                \"ram\": 8192,\n","                \"sync\": True,\n","                \"user\": \"saferplaces\",\n","                \"token\": \"S4fer_api_token\"\n","            }\n","        }\n","        # Make the API request\n","        response = requests.post(url, json=body)\n","        if response.status_code == 200:\n","            print(response.json())\n","        else:\n","            print(f\"Rain flood map generation failed: {response.text}\")\n","            return None\n","\n","        # Download the generated file from S3\n","        download_url = s3_output_file.replace(\"s3://\", \"https://s3.amazonaws.com/\")\n","        output_local_path = os.path.basename(download_url)\n","        key_id = s3_output_file.split(f\"s3://{s3_bucket}/\")[-1]\n","        print(download_url)\n","\n","        # Create an S3 client\n","        s3 = boto3.client('s3',config=Config(region_name=\"us-east-1\"))\n","\n","        # Download the file from S3\n","        try:\n","            # Retrieve the object\n","            s3.download_file(Bucket=s3_bucket,Key=key_id,Filename=output_file) # (Bucket=s3_bucket, Key=\"Rimini/wd.tif\")\n","        except Exception as e:\n","            print(f\"Error downloading file: {e}\")\n","\n","    else:\n","        print(\"No rain file provided.\")\n","        return None\n","\n","\n","def generate_coastal_flood_map(file_dem, output_file, s3_bucket, file_seamask, file_barrier, esl):\n","\n","    if output_file:\n","        s3_output_file = f\"s3://{s3_bucket}/api_data/{output_file}\"\n","    else:\n","        s3_output_file = None\n","\n","\n","    url = \"http://pygeoapi-saferplaces-lb-409838694.us-east-1.elb.amazonaws.com/processes/safer-coast-process/execution\"\n","    body = {\n","        \"inputs\": {\n","            \"file_dem\": file_dem,\n","            \"file_seamask\": file_seamask,\n","            \"file_water\": s3_output_file,\n","            \"barrier\": file_barrier,\n","            \"esl\": esl,\n","            'out_format': \"COG\",\n","            \"token\": \"S4fer_api_token\",\n","            \"user\": \"saferplaces\"\n","        }\n","    }\n","    # Make the API request\n","    response = requests.post(url, json=body)\n","    if response.status_code == 200:\n","        print(response.json())\n","        res_json = response.json()\n","    else:\n","        print(f\"Coastal flood map generation failed: {response.text}\")\n","        return None\n","    # Download the generated file from S3\n","    s3_output_file = res_json['files']['file_water']\n","    download_url = s3_output_file.replace(\"s3://\", \"https://s3.amazonaws.com/\")\n","    output_local_path = os.path.basename(download_url)\n","    key_id = s3_output_file.split(f\"s3://{s3_bucket}/\")[-1]\n","    out_local_file = s3_output_file.rsplit(\"/\",1)[1]\n","    if out_local_file == \"water.tif\":\n","        out_local_file = \"coast_watermap.tif\"\n","    print(download_url)\n","\n","    # Create an S3 client\n","    s3 = boto3.client('s3',config=Config(region_name=\"us-east-1\"))\n","\n","    # Download the file from S3\n","    try:\n","        # Retrieve the object\n","        print(f\"Downloading {key_id} from {s3_bucket}\")\n","        s3.download_file(Bucket=s3_bucket,Key=key_id,Filename=out_local_file) # (Bucket=s3_bucket, Key=\"Rimini/wd.tif\")\n","    except Exception as e:\n","        print(f\"Error downloading file: {e}\")\n","\n","\n","def main(requested_location,rain,esl=0,barrier=None,output_rain_file=\"rain_watermap.tif\", output_coast_file=None,model=\"safer_rain\",duration=3600, ti=600, tmax=3600, man=0.02, nl=25):\n","\n","    if isinstance(rain,str):\n","        if not rain.endswith(\".tif\"):\n","            rain = float(rain)\n","    if isinstance(esl,str):\n","        esl = float(esl)\n","\n","    dem_building = cities[requested_location]['dem_building']\n","    seamask = cities[requested_location]['sea_mask']\n","\n","    if model == \"safer_rain\":\n","\n","        print(f\"Generating flood map with intensity of {rain}mm on {requested_location}.\")\n","        generate_safer_rain_flood_map(rain=rain,s3_bucket=S3_BUCKET,dem_file=dem_building,output_file=output_rain_file)\n","        if esl != 0:\n","            print(f\"Generating flood map with extreme sea level of {esl}m on {requested_location}\")\n","            generate_coastal_flood_map(file_dem=dem_building,output_file=output_coast_file,s3_bucket=S3_BUCKET,file_seamask=seamask,file_barrier=barrier,esl=esl)\n","    return 0"]},{"cell_type":"code","source":["requested_location = \"Esbjerg\"\n","rain_intensity = \"100\"\n","extreme_sea_level = 3\n","main(requested_location,rain_intensity,esl=extreme_sea_level)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NmMK-ODkd8QK","executionInfo":{"status":"ok","timestamp":1740762864508,"user_tz":-60,"elapsed":58292,"user":{"displayName":"marco renzi","userId":"06858754244705857036"}},"outputId":"db2459a8-b5ad-4beb-f9a8-5b9ca46a4fa0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["{'id': 'safer_coast_process', 'files': {'file_water': 's3://s3-directed/api_data/b0d2dfae6d7dfe22594c58a28b00e183/coast/f9a33307138e694fa275afce767a43a1/water.tif'}}\n","https://s3.amazonaws.com/s3-directed/api_data/b0d2dfae6d7dfe22594c58a28b00e183/coast/f9a33307138e694fa275afce767a43a1/water.tif\n","Downloading api_data/b0d2dfae6d7dfe22594c58a28b00e183/coast/f9a33307138e694fa275afce767a43a1/water.tif from s3-directed\n"]},{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":[],"metadata":{"id":"QWkH-dK-bM7M"},"execution_count":null,"outputs":[]}]}